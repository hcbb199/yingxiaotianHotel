<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"

             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--spring-security对页面的拦截规则-->
    <!--设置白名单, 以下资源不被拦截; security="none": 设置此资源不被拦截-->
    <http pattern="/shoplogin.html" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>
    <http pattern="/register.html" security="none"></http>
    <http pattern="/seller/add.do" security="none"></http>

    <!--是否启用SPEL表达式, 默认值为true, 为true时配置拦截路径时要使用表达式配置: access="hasRole('ROLE_ADMIN')"-->
    <http use-expressions="false">
        <!--配置拦截器的拦截路径-->
        <!--当前用户必须有ROLE_ADMIN的角色, 才能访问根目录及其子目录下的资源-->
        <intercept-url pattern="/**" access="ROLE_ADMIN"></intercept-url>
        <!--开启自带表单登录功能-->
        <!--        <form-login></form-login>-->
        <!--配置自定义的登录页面-->
        <!--
            login-page: 指定登录页面;
            login-processing-url: 指定需与登录表单action属性一致;
            username-parameter: 指定需与登录表单用户名的参数名一致;
            password-parameter: 指定需与登录表单密码的参数名一致;
            authentication-failure-url: 指定了身份验证失败时跳转到的页面;
            default-target-url: 指定了成功进行身份验证和授权后默认呈现给用户的页面
            always-use-default-target: 指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL:
            (若未配置为true, 则在未登录状态下先访问xx页面被动跳转到登录页面, 待登录成功后, 会自动跳转到xx页面)
        -->
        <form-login login-page="/shoplogin.html"
                    login-processing-url="/login.do"
                    username-parameter="username"
                    password-parameter="password"
                    default-target-url="/admin/index.html"
                    authentication-failure-url="/shoplogin.html"
                    always-use-default-target="true"
        ></form-login>
        <!--关闭csrf, 否则访问html页面时会报403错-->
        <csrf disabled="true"></csrf>
        <!--因在系统的index.html页面中使用了框架页, 故需要设置框架页的策略为SAMEORIGIN-->
        <headers>
            <frame-options policy="SAMEORIGIN"></frame-options>
        </headers>
        <!--加此配置后，会自动的产生退出登录的地址/logout-->
        <!--        <logout></logout>-->
        <!--定义生成的退出地址即跳转页面-->
        <logout logout-success-url="/shoplogin.html" logout-url="/logout" invalidate-session="true"></logout>
    </http>


    <!--认证管理器-->
    <authentication-manager>
        <!--认证提供者-->
        <authentication-provider user-service-ref="userDetailService">
            <!--配置密码加密算法-->
            <password-encoder ref="bcryptEncoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>
    <!--    <beans:bean id="userDetailService" class="cn.neteast.service.UserDetailsServiceImpl"></beans:bean>-->

    <!-- 创建adminService的对象 -->
    <beans:bean id="adminService" class="cn.neteast.yxtHotel.service.impl.AdminServiceImpl"></beans:bean>
    <!--将userDetailService交给spring容器去创建-->
    <beans:bean id="userDetailService" class="cn.neteast.service.UserDetailsServiceImpl">
        <beans:property name="adminService" ref="adminService"></beans:property>
    </beans:bean>

    <!--配置加密-->
    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>


</beans:beans>